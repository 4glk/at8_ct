<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="spi_8c" kind="file">
    <compoundname>spi.c</compoundname>
    <includes refid="spi_8h" local="yes">spi.h</includes>
    <incdepgraph>
      <node id="293">
        <label>stdint.h</label>
      </node>
      <node id="290">
        <label>spi.c</label>
        <link refid="spi.c"/>
        <childnode refid="291" relation="include">
        </childnode>
      </node>
      <node id="291">
        <label>spi.h</label>
        <link refid="spi_8h"/>
        <childnode refid="292" relation="include">
        </childnode>
      </node>
      <node id="292">
        <label>compilers.h</label>
        <link refid="compilers_8h"/>
        <childnode refid="293" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="spi_8c_1a292196e767158c66f03cbcc244fc802b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SPI_Init</definition>
        <argsstring>(void)</argsstring>
        <name>SPI_Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/geraki/mcu_dev/at8_ct/spi.c" line="19" bodyfile="/home/geraki/mcu_dev/at8_ct/spi.c" bodystart="18" bodyend="28"/>
        <references refid="spi_8h_1a21e12998291d444a3fc6e5e2911c981e" compoundref="spi_8h" startline="20">SPI_DDRX</references>
        <references refid="spi_8h_1a7dbebab5f7dd57885adccf6711b13592" compoundref="spi_8h" startline="23">SPI_MOSI</references>
        <references refid="spi_8h_1a750ca7c9b92cfc9e57272ff3a49db48b" compoundref="spi_8h" startline="24">SPI_SCK</references>
        <references refid="spi_8h_1a81f0aae3c3a2adba06ac3b802b38915a" compoundref="spi_8h" startline="25">SPI_SS</references>
        <references refid="spi_8h_1ab142cc77dfa97010c9d2b616d0992b64" compoundref="spi_8h" startline="22">SPI_MISO</references>
        <references refid="spi_8h_1a6f5296638eb1632e342f63b7d9d5b635" compoundref="spi_8h" startline="19">SPI_PORTX</references>
        <referencedby refid="indicator_8h_1a380138acbd9424c5d40301e35549ba9a" compoundref="indicator_8c" startline="178" endline="196">IND_Init</referencedby>
      </memberdef>
      <memberdef kind="function" id="spi_8c_1a723a605b8afa759496ae2a9b5ad0453a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SPI_WriteByte</definition>
        <argsstring>(uint8_t data)</argsstring>
        <name>SPI_WriteByte</name>
        <param>
          <type>uint8_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/geraki/mcu_dev/at8_ct/spi.c" line="32" bodyfile="/home/geraki/mcu_dev/at8_ct/spi.c" bodystart="31" bodyend="37"/>
        <references refid="spi_8h_1a6f5296638eb1632e342f63b7d9d5b635" compoundref="spi_8h" startline="19">SPI_PORTX</references>
        <references refid="spi_8h_1a81f0aae3c3a2adba06ac3b802b38915a" compoundref="spi_8h" startline="25">SPI_SS</references>
      </memberdef>
      <memberdef kind="function" id="spi_8c_1a3b99985602162e372c530ce03647c54d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t SPI_ReadByte</definition>
        <argsstring>(uint8_t data)</argsstring>
        <name>SPI_ReadByte</name>
        <param>
          <type>uint8_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/geraki/mcu_dev/at8_ct/spi.c" line="42" bodyfile="/home/geraki/mcu_dev/at8_ct/spi.c" bodystart="41" bodyend="52"/>
        <references refid="spi_8h_1a6f5296638eb1632e342f63b7d9d5b635" compoundref="spi_8h" startline="19">SPI_PORTX</references>
        <references refid="spi_8h_1a81f0aae3c3a2adba06ac3b802b38915a" compoundref="spi_8h" startline="25">SPI_SS</references>
      </memberdef>
      <memberdef kind="function" id="spi_8c_1a47b45aed3d09db2fcd47a4ead3a029f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SPI_WriteArray</definition>
        <argsstring>(uint8_t num, uint8_t *data)</argsstring>
        <name>SPI_WriteArray</name>
        <param>
          <type>uint8_t</type>
          <declname>num</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/geraki/mcu_dev/at8_ct/spi.c" line="56" bodyfile="/home/geraki/mcu_dev/at8_ct/spi.c" bodystart="55" bodyend="63"/>
        <references refid="spi_8h_1a6f5296638eb1632e342f63b7d9d5b635" compoundref="spi_8h" startline="19">SPI_PORTX</references>
        <references refid="spi_8h_1a81f0aae3c3a2adba06ac3b802b38915a" compoundref="spi_8h" startline="25">SPI_SS</references>
        <referencedby refid="indicator_8h_1a3de511c73fd66b0009b6a1e743bcab30" compoundref="indicator_8c" startline="250" endline="364">IND_Update</referencedby>
      </memberdef>
      <memberdef kind="function" id="spi_8c_1ac150ae8ca6f9510f924a67292b57fed3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SPI_ReadArray</definition>
        <argsstring>(uint8_t num, uint8_t *data)</argsstring>
        <name>SPI_ReadArray</name>
        <param>
          <type>uint8_t</type>
          <declname>num</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/geraki/mcu_dev/at8_ct/spi.c" line="67" bodyfile="/home/geraki/mcu_dev/at8_ct/spi.c" bodystart="66" bodyend="75"/>
        <references refid="spi_8h_1a6f5296638eb1632e342f63b7d9d5b635" compoundref="spi_8h" startline="19">SPI_PORTX</references>
        <references refid="spi_8h_1a81f0aae3c3a2adba06ac3b802b38915a" compoundref="spi_8h" startline="25">SPI_SS</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//***************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Author(s)...:<sp/>Pashgan<sp/><sp/><sp/><sp/>http://ChipEnable.Ru<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Target(s)...:<sp/>Mega</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Compiler....:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Description.:<sp/>Драйвер<sp/>SPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Data........:<sp/>2.10.12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//***************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="spi_8h" kindref="compound">spi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*инициализация<sp/>SPI*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="spi_8h_1a292196e767158c66f03cbcc244fc802b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="spi_8c_1a292196e767158c66f03cbcc244fc802b" kindref="member">SPI_Init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*настройка<sp/>портов<sp/>ввода-вывода</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/>все<sp/>выводы,<sp/>кроме<sp/>MISO<sp/>выходы*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><ref refid="spi_8h_1a21e12998291d444a3fc6e5e2911c981e" kindref="member">SPI_DDRX</ref><sp/>=<sp/>(1&lt;&lt;<ref refid="spi_8h_1a7dbebab5f7dd57885adccf6711b13592" kindref="member">SPI_MOSI</ref>)|(1&lt;&lt;<ref refid="spi_8h_1a750ca7c9b92cfc9e57272ff3a49db48b" kindref="member">SPI_SCK</ref>)|(1&lt;&lt;<ref refid="spi_8h_1a81f0aae3c3a2adba06ac3b802b38915a" kindref="member">SPI_SS</ref>)|(0&lt;&lt;<ref refid="spi_8h_1ab142cc77dfa97010c9d2b616d0992b64" kindref="member">SPI_MISO</ref>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><ref refid="spi_8h_1a6f5296638eb1632e342f63b7d9d5b635" kindref="member">SPI_PORTX</ref><sp/>=<sp/>(1&lt;&lt;<ref refid="spi_8h_1a7dbebab5f7dd57885adccf6711b13592" kindref="member">SPI_MOSI</ref>)|(1&lt;&lt;<ref refid="spi_8h_1a750ca7c9b92cfc9e57272ff3a49db48b" kindref="member">SPI_SCK</ref>)|(1&lt;&lt;<ref refid="spi_8h_1a81f0aae3c3a2adba06ac3b802b38915a" kindref="member">SPI_SS</ref>)|(1&lt;&lt;<ref refid="spi_8h_1ab142cc77dfa97010c9d2b616d0992b64" kindref="member">SPI_MISO</ref>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*разрешение<sp/>spi,старший<sp/>бит<sp/>вперед,мастер,<sp/>режим<sp/>0*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>SPCR<sp/>=<sp/>(1&lt;&lt;SPE)|(0&lt;&lt;DORD)|(1&lt;&lt;MSTR)|(0&lt;&lt;CPOL)|(0&lt;&lt;CPHA)|(1&lt;&lt;SPR1)|(0&lt;&lt;SPR0);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>SPSR<sp/>=<sp/>(0&lt;&lt;SPI2X);</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*отослать<sp/>байт<sp/>данных<sp/>по<sp/>SPI*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="spi_8h_1a723a605b8afa759496ae2a9b5ad0453a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="spi_8c_1a723a605b8afa759496ae2a9b5ad0453a" kindref="member">SPI_WriteByte</ref>(uint8_t<sp/>data)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><ref refid="spi_8h_1a6f5296638eb1632e342f63b7d9d5b635" kindref="member">SPI_PORTX</ref><sp/>&amp;=<sp/>~(1&lt;&lt;<ref refid="spi_8h_1a81f0aae3c3a2adba06ac3b802b38915a" kindref="member">SPI_SS</ref>);<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/>SPDR<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!(SPSR<sp/>&amp;<sp/>(1&lt;&lt;SPIF)));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><ref refid="spi_8h_1a6f5296638eb1632e342f63b7d9d5b635" kindref="member">SPI_PORTX</ref><sp/>|=<sp/>(1&lt;&lt;<ref refid="spi_8h_1a81f0aae3c3a2adba06ac3b802b38915a" kindref="member">SPI_SS</ref>);<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/*отослать<sp/>и<sp/>получить<sp/>байт<sp/>данных<sp/>по<sp/>SPI*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="spi_8h_1a3b99985602162e372c530ce03647c54d" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="spi_8c_1a3b99985602162e372c530ce03647c54d" kindref="member">SPI_ReadByte</ref>(uint8_t<sp/>data)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/>uint8_t<sp/>report;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><ref refid="spi_8h_1a6f5296638eb1632e342f63b7d9d5b635" kindref="member">SPI_PORTX</ref><sp/>&amp;=<sp/>~(1&lt;&lt;<ref refid="spi_8h_1a81f0aae3c3a2adba06ac3b802b38915a" kindref="member">SPI_SS</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/>SPDR<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!(SPSR<sp/>&amp;<sp/>(1&lt;&lt;SPIF)));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/>report<sp/>=<sp/>SPDR;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><ref refid="spi_8h_1a6f5296638eb1632e342f63b7d9d5b635" kindref="member">SPI_PORTX</ref><sp/>|=<sp/>(1&lt;&lt;<ref refid="spi_8h_1a81f0aae3c3a2adba06ac3b802b38915a" kindref="member">SPI_SS</ref>);<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>report;<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*отправить<sp/>несколько<sp/>байт<sp/>данных<sp/>по<sp/>SPI*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="spi_8h_1a47b45aed3d09db2fcd47a4ead3a029f6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="spi_8c_1a47b45aed3d09db2fcd47a4ead3a029f6" kindref="member">SPI_WriteArray</ref>(uint8_t<sp/>num,<sp/>uint8_t<sp/>*data)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><ref refid="spi_8h_1a6f5296638eb1632e342f63b7d9d5b635" kindref="member">SPI_PORTX</ref><sp/>&amp;=<sp/>~(1&lt;&lt;<ref refid="spi_8h_1a81f0aae3c3a2adba06ac3b802b38915a" kindref="member">SPI_SS</ref>);<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(num--){</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPDR<sp/>=<sp/>*data++;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!(SPSR<sp/>&amp;<sp/>(1&lt;&lt;SPIF)));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><ref refid="spi_8h_1a6f5296638eb1632e342f63b7d9d5b635" kindref="member">SPI_PORTX</ref><sp/>|=<sp/>(1&lt;&lt;<ref refid="spi_8h_1a81f0aae3c3a2adba06ac3b802b38915a" kindref="member">SPI_SS</ref>);<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">/*отправить<sp/>и<sp/>получить<sp/>несколько<sp/>байт<sp/>данных<sp/>по<sp/>SPI*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="spi_8h_1ac150ae8ca6f9510f924a67292b57fed3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="spi_8c_1ac150ae8ca6f9510f924a67292b57fed3" kindref="member">SPI_ReadArray</ref>(uint8_t<sp/>num,<sp/>uint8_t<sp/>*data)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><ref refid="spi_8h_1a6f5296638eb1632e342f63b7d9d5b635" kindref="member">SPI_PORTX</ref><sp/>&amp;=<sp/>~(1&lt;&lt;<ref refid="spi_8h_1a81f0aae3c3a2adba06ac3b802b38915a" kindref="member">SPI_SS</ref>);<sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(num--){</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPDR<sp/>=<sp/>*data;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!(SPSR<sp/>&amp;<sp/>(1&lt;&lt;SPIF)));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*data++<sp/>=<sp/>SPDR;<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><ref refid="spi_8h_1a6f5296638eb1632e342f63b7d9d5b635" kindref="member">SPI_PORTX</ref><sp/>|=<sp/>(1&lt;&lt;<ref refid="spi_8h_1a81f0aae3c3a2adba06ac3b802b38915a" kindref="member">SPI_SS</ref>);<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/geraki/mcu_dev/at8_ct/spi.c"/>
  </compounddef>
</doxygen>
